server:
  port: 8080
  servlet:
    context-path: /

payment:
  service:
    url: ${PROCESSOR_DEFAULT_URL:http://localhost:8001}
    fallback: ${PROCESSOR_FALLBACK_URL:http://localhost:8002}
  queue.threads: ${QUEUE_THREADS:10}

spring:
  datasource:
    url: jdbc:postgresql://${METRICS_DATABASE_URL:localhost:5432/payment-metrics}
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  hikari:
    maximum-pool-size: 20
    minimum-idle: 5
    idle-timeout: 30000
    connection-timeout: 30000
    max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


resilience4j:
  circuitbreaker:
    instances:
      cirtcuitBreakerPaymentService:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 2000
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      retryPaymentService:
        maxAttempts: 3
        waitDuration: 1s

feign:
  httpclient5:
    enabled: true
    max-connections: 200
    max-connections-per-route: 50
    connectTimeout: 3000
    readTimeout: 3000
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 3000